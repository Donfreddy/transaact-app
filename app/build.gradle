plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id "com.google.protobuf" version "0.8.17"
}

// Import all versions from dependencies.gradle
apply from: '../dependencies.gradle'

android {
  compileSdk versions.compileSdk

  defaultConfig {
    applicationId "com.freddydev.transaact"
    minSdk versions.minSdk
    targetSdk versions.compileSdk
    versionCode versions.versionCode
    versionName versions.versionName

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables {
      useSupportLibrary true
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  buildFeatures {
    compose true

    // Disable unused AGP features
    buildConfig false
    aidl false
    renderScript false
    resValues false
    shaders false
  }
  composeOptions {
    kotlinCompilerExtensionVersion versions.composeVersion
  }
  packagingOptions {
    resources {
      exclude "/META-INF/licenses/**"
      excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
  }
}

dependencies {

  // Base
  implementation 'androidx.core:core-ktx:1.8.0'
  implementation 'androidx.appcompat:appcompat:1.4.2'
  implementation "androidx.window:window:1.1.0-alpha02"
  implementation "androidx.activity:activity-ktx:$versions.activityVersion"
  implementation "androidx.activity:activity-compose:$versions.activityVersion"

  // Accompanist libraries
  implementation "com.google.accompanist:accompanist-permissions:$versions.accompanistVersion"
  implementation "com.google.accompanist:accompanist-systemuicontroller:$versions.accompanistVersion"

  // Compose
  implementation "androidx.compose.ui:ui:$versions.composeVersion"
  implementation "androidx.compose.material:material:$versions.composeVersion"
  implementation "androidx.compose.ui:ui-tooling-preview:$versions.composeVersion"
  implementation "androidx.navigation:navigation-compose:$versions.composeNavVersion"
  implementation "androidx.compose.runtime:runtime-livedata:$versions.composeVersion"
  implementation "androidx.compose.foundation:foundation-layout:$versions.composeVersion"
  implementation "androidx.compose.material:material-icons-extended:$versions.composeVersion"

  // Coroutines
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutinesVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"

  // Lifecycle
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$versions.lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"

  // Preferences DataStore
  implementation "androidx.datastore:datastore:$versions.datastoreVersion"

  // protobuf
  implementation "com.google.protobuf:protobuf-javalite:$versions.protobufVersion"

  // Testing dependencies
  testImplementation "junit:junit:$versions.junitVersion"
  androidTestImplementation "androidx.test.ext:junit:$versions.testExtJunitVersion"
  androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1'
  androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoVersion"
  androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espressoVersion"

  // Compose testing dependencies
  debugImplementation "androidx.compose.ui:ui-tooling:$versions.composeVersion"
  debugImplementation "androidx.compose.ui:ui-test-manifest:$versions.composeVersion"
  androidTestImplementation "androidx.compose.ui:ui-test-junit4:$versions.composeVersion"
}

protobuf {
  // Configures the Protobuf compilation and the protoc executable
  protoc {
    // Downloads from the repositories
    artifact = "com.google.protobuf:protoc:3.19.4"
  }

  // Generates the java Protobuf-lite code for the Protobuf in this project
  generateProtoTasks {
    all().each { task ->
      task.builtins {
        // Configures the task output type
        java {
          // Java Lite has smaller code size and is recommended for Android
          option 'lite'
        }
      }
    }
  }
}